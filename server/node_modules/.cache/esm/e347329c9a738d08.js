let express,dotenv,cors,mongoose,userRoute,productRoute;_9a7‍.w("express",[["default",["express"],function(v){express=v}]]);_9a7‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_9a7‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_9a7‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_9a7‍.w("./routes/userRoute.js",[["default",["userRoute"],function(v){userRoute=v}]]);_9a7‍.w("./routes/productRoute.js",[["default",["productRoute"],function(v){productRoute=v}]]);






dotenv.config();

const app = express();

mongoose
	.connect(`${process.env.MONGO_DB}`, {
		useNewUrlParser: true,
		useUnifiedTopology: true
	})
	.then(() => {
		console.log(`DB Connected to DB`);
	})
	.catch(error => {
		_9a7‍.g.console.log(error);
	});

// middlewares
app.use(express.json({ limit: "5mb" }));
app.use(cors());

// routes
app.use("/api", userRoute);
app.use("/api", productRoute);

const PORT = process.env.PORT || 5000;

app.listen(PORT, () => console.log(`Server Listening on Port ${PORT}`));
