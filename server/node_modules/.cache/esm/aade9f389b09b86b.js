let express,path,multer,nanoid,createProduct,uploadImage;_9b0‍.x([["default",()=>_9b0‍.o]]);_9b0‍.w("express",[["default",["express"],function(v){express=v}]]);_9b0‍.w("path",[["default",["path"],function(v){path=v}]]);_9b0‍.w("multer",[["default",["multer"],function(v){multer=v}]]);_9b0‍.w("nanoid",[["nanoid",["nanoid"],function(v){nanoid=v}]]);_9b0‍.w("../controllers/productAuth.js",[["createProduct",["createProduct"],function(v){createProduct=v}],["uploadImage",["uploadImage"],function(v){uploadImage=v}]]);






const router = express.Router();

router.post("/products", createProduct);
let storage = multer.diskStorage({
	destination: (req, file, callback) => {
		callback(null, "./uploads");
	},
	filename: (req, file, callback) => {
		callback(null, Date.now() + file.originalname);
	}
});

// function checkFileType(file, callback) {
// 	const fileTypes = /jpg|jpeg|png/;
// 	const extname = fileTypes.test(path.extname(file.originalname).toLowerCase());
// 	const mimeType = fileTypes.test(file.mimeType);

// 	// console.log(mimeType);
// 	if (extname && mimeType) {
// 		return callback(null, true);
// 	} else {
// 		callback("Images Only!");
// 	}
// }

const upload = multer({
	storage: storage,
	limits: {
		fieldSize: 1024 * 1024 * 3
	}
});
router.post("/upload-image", upload.single("image"), (req, res, next) => {
	const file = req.file;
	if (!file) {
		const error = new Error("Please Upload a file");
		error.httpStatusCode = 400;
		return next(error);
	}
	res.send(file);
	_9b0‍.g.console.log("Success", req.file);
});

_9b0‍.d(router);
